import { expect, test } from "@playwright/test";

// Going to `/`, `/conico974`, `/kheuzy` and `/sommeeer` should be catched by our `[[...page]]` route.
// Also the /super/long/path/to/secret/page should be pregenerated by the `getStaticPaths` function.
test.describe("Catch-all optional route in root should work", () => {
  test("should be possible to visit home and a pregenerated subpage", async ({
    page,
  }) => {
    await page.goto("/");
    await page.locator("h1").getByText("Pages Router").isVisible();

    await page.goto("/conico974");
    const pElement = page.getByText("Path: conico974", { exact: true });
    await pElement.isVisible();
  });
  test("should be possible to visit a long pregenerated path", async ({
    page,
  }) => {
    await page.goto("/super/long/path/to/secret/page");
    const h1Text = await page.getByTestId("page").textContent();
    expect(h1Text).toBe("Page: super,long,path,to,secret,page");
  });
  test("should be possible to request an API route when you have a catch-all in root", async ({
    request,
  }) => {
    const response = await request.get("/api/hello");
    expect(response.status()).toBe(200);
    const body = await response.json();
    expect(body).toEqual({ hello: "OpenNext rocks!" });
  });
});
